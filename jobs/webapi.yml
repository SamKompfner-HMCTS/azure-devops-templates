parameters:
  vstsFeedId: '0bb8fdf9-08cc-423c-8a96-81a1e4d65711'
  pool: 'Azure-VSTS-VS2017'
  cleanCheckout: 'false'
  azureSubscription: 'Reform-CFT-VH-Dev'
  buildConfiguration: 'Release'
  sonarCloudProjectKey: ''
  sonarCloudextraProperties: ''
  coverletCoverageExclusions: ''
  integrationTestsAppSettingsTransform: ''

jobs:
- job: 
  displayName: 'Build a .Net Core Web API'
  pool: ${{ parameters.pool }}

  # Reference templae for setting up build tools
  steps:
  - powershell: |      
      Write-output '${{ parameters.integrationTestsAppSettingsTransform }}'
    displayName: 'Print integrationTestsAppSettingsTransform on start'

  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: ${{ parameters.cleanCheckout }}  # whether to fetch clean each time
  - template: ../templates/common/common.yml

  - powershell: |
      $var = (gci env:*).GetEnumerator() | Sort-Object Name
      $out = ""
      Foreach ($v in $var) {$out = $out + "`t{0,-28} = {1,-28}`n" -f $v.Name, $v.Value}
      
      write-output "dump variables on $env:BUILD_ARTIFACTSTAGINGDIRECTORY\test.md"
      $fileName = "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\test.md"
      set-content $fileName $out
      Write-output $out
      write-output "##vso[task.addattachment type=Distributedtask.Core.Summary;name=Environment Variables;]$fileName"
    displayName: 'Print all variables'

# SonarCloud Prepare step
  - template: ../templates/sonarCloud/sonarCloudPrepare.yml
    parameters:
       sonarCloudProjectKey: ${{ parameters.sonarCloudProjectKey }}
       sonarCloudprojectName: '$(Build.Repository.Name)'
       sonarCloudextraProperties: ${{ parameters.sonarCloudextraProperties }}


  - template: ../templates/vsBuild/dotnetBuild.yml
    parameters:
      buildConfiguration: '${{ parameters.buildConfiguration }}'

  # Executes unit tests
  - template: ../templates/tests/runAllTests.yml
    parameters:
      buildConfiguration: '${{ parameters.buildConfiguration }}'
      integrationTestsAppSettingsTransform: '${{ parameters.integrationTestsAppSettingsTransform }}'
      coverletCoverageExclusions: '${{ parameters.coverletCoverageExclusions }}'

# Executes tests and publishes results
  - template: ../templates/sonarCloud/sonarCloudRunAnalysis.yml

# Publish artifacts
  - template: ../templates/publishArtifacts/publishArtifacts.yml
