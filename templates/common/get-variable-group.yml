parameters:
  - name: subscriptionName
    type: string
  - name: organizationUrl
    type: string
    default: $(System.CollectionUri)
    #example: https://dev.azure.com/fabrikamfiber/
  - name: projectName
    type: string
    default: $(System.TeamProject)
  - name: variableGroupName
    type: string
    default: ""
  - name: variableGroupId
    type: string
    default: ""
  - name: variableName
    type: string
  - name: taskName
    type: string
    default: 'variableGroupDownload'


steps:
  - task: AzureCLI@2
    displayName: 'Download ${{ parameters.variableGroupName }}:${{ parameters.variableGroupId }} from ${{ parameters.projectName }}'
    name: ${{ parameters.taskName }}
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        variableName="${{ parameters.variableName }}"
        organisation="${{ parameters.organizationUrl }}"
        project="${{ parameters.projectName }}"
        groupName="${{ parameters.variableGroupName }}"
        groupId="${{ parameters.variableGroupId }}"
        
        echo $(System.AccessToken) | az devops login --organization $organisation

        az extension add --name azure-devops
        if [ "$groupId" = "" ]
        then
            groupId=$(az pipelines variable-group list --org ${organisation} --project "${project}" --query "[?name=='${groupName}'].{id:id}[0]" -o tsv --only-show-errors)
        fi
        if [ "$groupId" = "" ]
        then
            echo "##vso[task.LogIssue type=error;]ERROR: either Variable Group ID is not provided or not found. ID: ${groupId} Name: ${groupName}"
            exit 1
        fi
        jsonPath="$(Build.SourcesDirectory)/${groupName}.json"
        az pipelines variable-group show --org ${organisation} --project "${project}" --group-id ${groupId} --only-show-errors -o json > $jsonPath
        varGroupJson=$(jq -c . ${jsonPath})

        echo "${variableName} is ${varGroupJson}"
        echo "##vso[task.setvariable variable=$variableName;isOutput=true]$varGroupJson"
        echo "##vso[task.setvariable variable=${variableName}_path;isOutput=true]${jsonPath}"
        