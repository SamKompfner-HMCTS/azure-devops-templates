parameters:
  - name: app_settings_path
    type: string
  - name: settings
    type: object
    default: []  

steps:
  - pwsh: |
      $appSettings_path = "$($env:app_settings_path)"
      $appSettings = Get-Content -Path $appSettings_path | ConvertFrom-Json -Depth 4

      Write-Host "App Settings before processing"
      Write-Host $($appSettings | ConvertTo-Json -Depth 4)
      Write-Host ""

      $environmentVars = Get-ChildItem env:
      Write-Host "ENV Vars"
      Write-Host $environmentVars
      Write-Host ""

      $appSettings.PSObject.Properties | ForEach-Object {
          $parentName = $_.Name
          Write-Host "Process $($parentName)"
          if ($($_.Value) -is [System.Management.Automation.PSCustomObject]){

              $children =  $($_.Value) # | ConvertFrom-Json
              $children.PSObject.Properties | ForEach-Object {
                  $childName = $_.Name
                  Write-Host "Process $parentName - $childName"
                  $envName="$parentName`_$childName"
                  if (Test-Path env:$envName){
                      Write-Host "Found value for $envName"
                      $_.Value = $($environmentVars | Where-Object { $_.Name -ceq "$envName" }).Value
                  } else {
                      Write-Host "Did NOT find value for $envName"
                  }
              }
          
          } else {
              Write-Host "$($parentName) is not an object"
              if (Test-Path env:$parentName){
                  Write-Host "Found value for $parentName"
                  $_.Value = $($environmentVars | Where-Object { $_.Name -ceq "$parentName" }).Value
              } else {
                  Write-Host "Did NOT find value for $parentName"
              }
          }
      }


      Write-Host ""
      Write-Host "App Settings After processing"
      Write-Host $($appSettings | ConvertTo-Json -Depth 4)

      Set-Content -Path $appSettings_path -Value $($appSettings | ConvertTo-Json -Depth 4)
    displayName: "Replace App Settings in ${{ parameters.app_settings_path }}"
    env:
        app_settings_path: ${{ parameters.app_settings_path }}
        ${{ each setting in parameters.settings }}:
          ${{ replace(setting.name, ':', '_') }}: ${{ setting.value }}