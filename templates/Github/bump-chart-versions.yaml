parameters:
  - name: chartPath
    type: string
  - name: chartName
    type: string
  - name: chartBranch
    type: string
    default: "master"

  - name: githubToken
    type: string
  - name: githubUsername
    type: string
  - name: githubEmail
    type: string

steps:
  - bash: |
      CHART_DIRECTORY="${chartPath}"
      BRANCH="${chartBranch}"
      CHART_NAME="${chartName}"

      githubUsername="hmcts-vh-test-app"
      githubToken="ghs_XhEo3DJhCjHZuZPBMgpNruuFOGeI4r21645S"
      githubEmail="172582"

      ## Move to root
      cd ${CHART_DIRECTORY}

      echo "Get difference on Values"
      git fetch origin master:master
      git diff -s --exit-code origin/master "${CHART_DIRECTORY}/charts/${CHART_NAME}/values.yaml"

      if [ $? -eq 1 ]; then
        echo "Diff in values.yaml detected"
        DIFF_IN_VALUES=true
      else
        echo "No diff in values.yaml detected"
        DIFF_IN_VALUES=false
      fi

      echo "Get difference on Charts"
      git diff -s --exit-code origin/master "${CHART_DIRECTORY}/charts/${CHART_NAME}/Chart.yaml"

      if [ $? -eq 1 ]; then
        echo "Diff in Chart.yaml detected"
        DIFF_IN_CHART=true
      else
        echo "No diff in Chart.yaml detected"
        DIFF_IN_CHART=false
      fi

      echo "Get difference on requirements"
      DIFF_IN_REQUIREMENTS=false
      if [[ -f "${CHART_DIRECTORY}/charts/${CHART_NAME}/requirements.yaml" ]]
      then
        git diff -s --exit-code origin/master "${CHART_DIRECTORY}/charts/${CHART_NAME}/requirements.yaml"
        if [ $? -eq 1 ]; then
          echo "Diff in requirements.yaml detected"
          DIFF_IN_REQUIREMENTS=true
        else
          echo "No diff in requirements.yaml detected"
          DIFF_IN_REQUIREMENTS=false
        fi
      fi

      if [[ ${DIFF_IN_VALUES} = 'false' ]] && [[ ${DIFF_IN_REQUIREMENTS} = 'false' ]] && [[ ${DIFF_IN_CHART} = 'false' ]] ; then
        echo 'No differences requiring chart version bump detected'
        exit 0
      fi

      git diff origin/master "${CHART_DIRECTORY}/charts/${CHART_NAME}/Chart.yaml" | grep --quiet '+version'

      if [ $? -eq 0 ]; then
        echo "Chart.yaml version has been bumped :)"
      else
        echo "==================================================================="
        echo "=====  Version is not bumped in Chart.yaml file    ====="
        echo "=====  This is required as you changed something in           ====="
        echo "=====  either values.yaml or requirements.yaml                ====="
        echo "=====  Jenkins will bump the version and commit for you.      ====="
        echo "==================================================================="

        git remote set-url origin $(git config remote.origin.url | sed "s/github.com/${githubUsername}:${githubToken}@github.com/g")
        git remote set-url origin https://${githubUsername}:${githubToken}@github.com/hmcts/${repo_name}.git
        git config --global user.name "${githubUsername}"
        git config --global user.email "${githubEmail}"

        CHART_VERSION=$(cat "${CHART_DIRECTORY}/charts/${CHART_NAME}/Chart.yaml" | grep ^version | cut -d ':' -f 2 | sed -e 's/^[[:space:]]*//')
        NEW_VERSION=$(echo $CHART_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g' )
        sed -i -e "s/^version: $CHART_VERSION/version: $NEW_VERSION/" "${CHART_DIRECTORY}/charts/${CHART_NAME}/Chart.yaml"

        git add "${CHART_DIRECTORY}/charts/${CHART_NAME}/Chart.yaml"
        git commit -m "Bumping chart version"
        git push origin HEAD:$BRANCH
        exit 1
      fi

    env:
      chartPath: ${{ parameters.chartPath }}
      chartName: ${{ parameters.chartName }}
      chartBranch: ${{ parameters.chartBranch }}
      githubToken: ${{ parameters.githubToken }}
      githubUsername: ${{ parameters.githubUsername }}
      githubEmail: ${{ parameters.githubEmail }}
    displayName: Bump chart version check
