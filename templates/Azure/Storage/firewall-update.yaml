parameters:
    - name: subscriptionName
      type: string
    - name: resourceGroupName
      type: string
    - name: storageAccountName
      type: string
    - name: action
      type: string
      values:
      - Deny
      - Allow
      - Disabled
    - name: alwaysRun
      type: boolean
      default: false

steps:
  - ${{ if or( eq(parameters.action, 'Deny' ), eq(parameters.action, 'Allow') )}}:
    - task: AzureCLI@2
      displayName: Update network defualt action to '${{ parameters.action }}' for ${{ parameters.storageAccountName }}
      ${{ if eq(parameters.alwaysRun, true ) }}:
        condition: always() 
      inputs:
        azureSubscription: '${{parameters.subscriptionName}}'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $storageAccountName = "${{ parameters.storageAccountName }}"
          $resourceGroupName = "${{ parameters.resourceGroupName }}"
          $action = "${{ parameters.action }}"

          Write-Host "Starting Task: Update network defualt action to '$action' for '$storageAccountName'"
          az storage account update -g $resourceGroupName --name $storageAccountName --default-action $action --public-network-access Enabled 
          Write-Host "Updated, checking it applied..."
          $sa = az storage account show -g $resourceGroupName --name $storageAccountName | ConvertFrom-Json

          $defaultAction = $sa.networkRuleSet.defaultAction
          $publicNetworkAccess = $sa.publicNetworkAccess

          if (($defaultAction -eq $action) -and ($publicNetworkAccess -eq "Enabled")) {
            Write-Host "Setting has been applied successfully"            
          } else {
            Write-Host "##vso[task.LogIssue type=error;]The requested update did not apply"
            exit 1
          }

  - ${{ if eq(parameters.action, 'Disabled' ) }}:
    - task: AzureCLI@2
      displayName: Disable public network access for '${{ parameters.storageAccountName }}'
      ${{ if eq(parameters.alwaysRun, true ) }}:
        condition: always() 
      inputs:
        azureSubscription: '${{parameters.subscriptionName}}'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $storageAccountName = "${{ parameters.storageAccountName }}"
          $resourceGroupName = "${{ parameters.resourceGroupName }}"
          $action = "${{ parameters.action }}"
          Write-Host "Starting Task: Disable public network access for '$storageAccountName'"
          az storage account update -g $resourceGroupName --name $storageAccountName --public-network-access Disabled
          Write-Host "Updated, checking it applied..."
          $publicNetworkAccess = (az storage account show -g $resourceGroupName --name $storageAccountName | ConvertFrom-Json).publicNetworkAccess
          if ($publicNetworkAccess -eq $action) {
            Write-Host "Setting has been applied successfully"
          } else {
            Write-Host "##vso[task.LogIssue type=error;]The requested update did not apply"
            exit 1
          }          