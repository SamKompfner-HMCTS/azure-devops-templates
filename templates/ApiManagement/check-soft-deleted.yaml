parameters:
  - name: subscriptionName
    type: string
  - name: apimName
    type: string
  - name: resourceGroupName
    type: string

  - name: variableName
    type: string
  - name: taskName
    type: string
    default: 'getSoftDeleteServices'


steps:
  - task: AzureCLI@2
    displayName: 'Check if ${{ parameters.apimName }} is available'
    name: ${{ parameters.taskName }}
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |

        apims=$(az apim list --resource-group $resourceGroupName --query "[?name=='$apimName'].{Name:name, State:targetProvisioningState}" -o json --only-show-errors)
        echo "APIM Response ${#apims[@]}"
        
        response=false
        if [ ${#apims[@]} -lt 2 ]; then
        
          available=$(az apim check-name --name $apimName --query "nameAvailable" -o tsv --only-show-errors)
        
          if [ "${available}" == "true" ]; then
            echo "API Management Service $apimName is available"
            response=true
          else
            echo "API Management Service $apimName is in Soft Delete State"
          fi
        
        else
          echo "API Management Service $apimName is live"
          response=true
        fi
        
        echo "##vso[task.setvariable variable=$variableName;isOutput=true]$response"
      
    env:
      variableName: "${{ parameters.variableName }}"
      resourceGroupName: "${{ parameters.resourceGroupName }}"
      apimName: "${{ parameters.apimName }}"
