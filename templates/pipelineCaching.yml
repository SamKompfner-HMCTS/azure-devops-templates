parameters:
  - name: nugetProjectPath
    type: string
    default: '.'

  - name: nodeProjectPath
    type: string
    default: '.'

  - name: yarnProjectPath
    type: string
    default: '.'

  - name: packageManagers
    type: object
    default:
      - nuget
    values:
    - nuget
    - npm
    - yarn

  - name: NUGET_PACKAGES
    type: string
    default: $(Pipeline.Workspace)/.nuget/packages
  - name: npm_config_cache
    type: string
    default: $(Pipeline.Workspace)/.npm
  - name: YARN_CACHE_FOLDER
    type: string
    default: $(Pipeline.Workspace)/.yarn

steps:
- ${{ if containsValue(parameters.packageManagers, 'nuget') }}:
  - task: Cache@2
    displayName: Cache NuGet packages
    inputs:
      key: 'nuget | "$(Agent.OS)" | ${{ parameters.nugetProjectPath }}/packages.lock.json'
      restoreKeys: |
        nuget | "$(Agent.OS)"
      path: ${{ parameters.NUGET_PACKAGES }}
      cacheHitVar: NUGET_CACHE_RESTORED

- ${{ if containsValue(parameters.packageManagers, 'npm') }}:
  - task: Cache@2
    displayName: Cache npm
    inputs:
      key: 'npm | "$(Agent.OS)" | ${{ parameters.nodeProjectPath }}/package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: ${{ parameters.npm_config_cache }}
      cacheHitVar: NPM_CACHE_RESTORED

- ${{ if containsValue(parameters.packageManagers, 'yarn') }}:
  - task: Cache@2
    displayName: Cache Yarn packages
    inputs:
      key: 'yarn | "$(Agent.OS)" | "${{ parameters.yarnProjectPath }}/yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
      path: ${{ parameters.YARN_CACHE_FOLDER }}
      cacheHitVar: YARN_CACHE_RESTORED
