parameters:
  - name: helmVersion
    type: string
    default: 'latest'
  - name: azureSubscription
    type: string
    default: ""
  - name: kubernetesRG
    type: string
  - name: kubernetesCluster
    type: string
    default: "ss-dev-01-aks"
  - name: acrName
    type: string
    default: "sdshmctspublic"
  - name: namespace
    type: string
    default: "vh"
  - name: chartName
    type: string
  - name: chartPath
    type: string
  - name: fullChartName
    type: string
    default: ""
  - name: imageTag
    type: string
    default: "$(Build.BuildNumber)"
  - name: environment
    type: string
  - name: additionalArgs
    type: string
    default: ""

steps:
  - bash: |
      echo $askName
      echo $askRg
      echo $azureSubscription
    env: 
      askName: ${{ parameters.kubernetesCluster }}
      askRg: ${{ parameters.kubernetesRG }}
      azureSubscription: ${{ parameters.azureSubscription }}

  - bash: |
      valuesPath="${valuesPath}"
      
      helmArgs=""
      if test -f "${valuesPath}/values.yaml"; then

        echo "$valuesPath found"
        helmArgs=" -f ${valuesPath}/values.yaml"
        valuesEnv="${valuesPath}/values.${env}.yaml"

        if test -f "$valuesEnv"; then
          echo "$valuesEnv found"
          helmArgs="$helmArgs -f $valuesEnv"
        else
          echo "NOT $valuesEnv found"
        fi
      fi
      helmArgs="$helmArgs $additionalArgs"
      echo "arg: $helmArgs"
      echo "##vso[task.setvariable variable=args;isOutput=true]$helmArgs"
    displayName: Set Helm Arguments
    name: helm
    env:
      valuesPath: ${{ parameters.chartPath }}
      additionalArgs: ${{ parameters.additionalArgs }}
      env: ${{ parameters.environment }}

  
  - ${{ if eq(parameters.fullChartName, '') }}:
    - bash: |
          cd $chartPath

          echo "Update Dependencys"
          helm dependency update

      displayName: Helm Dependency build
      env:
        chartPath: "${{ parameters.chartPath }}"

  - bash: |
      echo "path: ${path}"
      echo "releasename: ${releaseName}"
    env: 
      releaseName: ${{ parameters.chartName }}-${{ parameters.imageTag }}
      path: ${{ parameters.chartPath }}/${{ parameters.fullChartName }}
    displayName: "Helm Details"

  - task: HelmDeploy@0
    displayName: Helm upgrade
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: '${{ parameters.azureSubscription }}'
      azureResourceGroup: ${{ parameters.kubernetesRG }}
      kubernetesCluster: ${{ parameters.kubernetesCluster }}
      command: upgrade
      chartType: filepath
      chartPath: ${{ parameters.chartPath }}/${{ parameters.fullChartName }}
      releaseName: ${{ parameters.chartName }}-${{ parameters.imageTag }}
      namespace: ${{ parameters.namespace }}
      install: true
      waitForExecution: false
      useClusterAdmin: true
      arguments: $(helm.args)
